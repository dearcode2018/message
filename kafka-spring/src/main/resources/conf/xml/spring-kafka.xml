<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans	 http://www.springframework.org/schema/beans/spring-beans.xsd
	
	" default-lazy-init="true">

	

<!-- 注意，属性注入不能 java.util.Properties对象，虽然Properties也是Map接口，否则无法识别
		正确方式应该使用java.util.HashMap方式才能注入值
 -->

<!-- =======================  生产者  ======================= -->
	<!-- 生产者参数 -->
	<bean id="producerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${group.id}" />
				<entry key="retries" value="1" />
				<entry key="batch.size" value="16384" />
				<entry key="linger.ms" value="1" />
				<entry key="buffer.memory" value="33554432" />
				<entry key="key.serializer" value="org.apache.kafka.common.serialization.StringSerializer" />
				<entry key="value.serializer" value="org.apache.kafka.common.serialization.StringSerializer" />
			</map>
		</constructor-arg>
	</bean>
	
	<!-- 生产者工厂 -->
	<bean id="producerFactory" class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
		<constructor-arg>
			<ref bean="producerProperties"/>
		</constructor-arg>
	</bean>

	<!-- 生产者监听器 -->
	<bean id="producerListener" class="com.hua.listener.KafkaProducerListener" />
	
	<!-- kafka模板 -->
	<bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg name="producerFactory" ref="producerFactory" />
		<constructor-arg name="autoFlush" value="true" />
		<!-- 默认主题 -->
		<property name="defaultTopic" value="defaultTopic" />
		<property name="producerListener" ref="producerListener" />
	</bean>
	
<!-- =======================  消费者  ======================= -->
	<!-- 消费者参数 -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${group.id}" />
				<entry key="enable.auto.commit" value="true" />
				<entry key="auto.commit.interval.ms" value="1000" />
				<entry key="session.timeout.ms" value="15000" />
				<entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
			</map>
		</constructor-arg>
	</bean>

	<!-- 消费者工厂 -->
	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties" />
		</constructor-arg>
	</bean>

	<!-- 消费者监听器 -->
	<bean id="consumerListener" class="com.hua.listener.KafkaConsumerListener" />
	
	<!-- 消费者容器配置 -->
	<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
		<constructor-arg  value="test_topic" />
		<property name="messageListener" ref="consumerListener" />
	</bean>
	
	<!-- 消费者监听器容器 -->
	<bean id="messageListenerContainer" 
		class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
		init-method="doStart">
		<constructor-arg index="0" ref="consumerFactory" />
		<constructor-arg index="1" ref="containerProperties" />
	</bean>
	
</beans>
